package com.example.todo

import android.os.Bundle
import android.text.format.DateUtils
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.navArgs
import com.example.todo.databinding.TodoDisplayBinding
import org.koin.androidx.viewmodel.ext.android.viewModel
import org.koin.core.parameter.parametersOf

class DisplayFragment : Fragment() {
    // DisplayFragmentArgs is generated by the Safe Args gradle plugin,
    // navArgs() is an extension function that generates an object of that class
    // and fills it with the proper arguments
    private val args: DisplayFragmentArgs by navArgs()
    private var binding: TodoDisplayBinding? = null
    // passes model id to koin, which creates the view model
    private val viewModel: SingleModelViewModel by viewModel { parametersOf(args.modelID) }

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View = TodoDisplayBinding.inflate(inflater, container, false)
        .apply { binding = this }
        .root

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        viewModel.getModel()?.let { model ->
            binding?.apply {
                completed.visibility = if (model.isCompleted) View.VISIBLE else View.GONE
                descDisplay.text = model.description
                createdOn.text = DateUtils.getRelativeDateTimeString(
                    requireContext(),
                    model.createdOn.toEpochMilli(),
                    DateUtils.MINUTE_IN_MILLIS,
                    DateUtils.WEEK_IN_MILLIS,
                    0
                )
                notes.text = model.notes
            }
        }
    }

    override fun onDestroyView() {
        binding = null
        super.onDestroyView()
    }
}